(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{375:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"deno-모듈-테스트하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deno-모듈-테스트하기"}},[t._v("#")]),t._v(" deno 모듈 테스트하기")]),t._v(" "),a("p",[t._v("deno는 기본적으로 테스트 기능을 내장하고 있습니다. 다음 명령어로 deno의 test 기능을 사용할 수 있습니다")]),t._v(" "),a("div",{staticClass:"language-bsah extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("deno test\n")])])]),a("p",[t._v("위 명령어를 입력하면 "),a("code",[t._v("Deno.test()")]),t._v(" 메소드를 실행한 모든 코드를 실행합니다.")]),t._v(" "),a("p",[t._v("테스트를 위해 모듈을 만듭니다. 파일 경로는 "),a("code",[t._v("accumulator.ts")]),t._v(" 입니다.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Add two numbers\n * @param a first number\n * @param b second number\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("accumulator.ts")]),t._v(" 에 위 내용을 입력하면 다른 deno 프로그램 파일에서 가져와 사용할 수 있습니다.\n이번에는 테스트를 위해 만들었으므로 "),a("code",[t._v("accumulator.test.ts")]),t._v(" 에서 "),a("code",[t._v("add")]),t._v(" 모듈을 가져와봅니다")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./accumulator.ts'")]),t._v("\n")])])]),a("p",[a("code",[t._v("accumulator.test.ts")]),t._v(" 테스트 파일에서 add를 가져왔습니다. add 메소드를 호출하면 두 숫자를 더할 수 있습니다\n이제 첫번째 Deno 클래스의 test 메소드를 사용해봅니다")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./accumulator.ts'")]),t._v("\n\nDeno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1과 2를 더하면 3 입니다'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://doc.deno.land/builtin/stable#Deno.test",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deno.test 메소드"),a("OutboundLink")],1),t._v("는 test의 이름과 실행할 메소드를 파라미터로 사용합니다.\n위 테스트는 "),a("code",[t._v("1과 2를 더하면 3 입니다")]),t._v(" 라는 테스트를 정의하였고, 실행되면 "),a("code",[t._v("console.log")]),t._v(" 로 "),a("code",[t._v("add")]),t._v(" 메소드를 테스트한 결과를 보여줍니다.")]),t._v(" "),a("p",[t._v("deno는 Node.js와 마찬가지로 "),a("code",[t._v("assert")]),t._v(" 를 제공합니다 다음 import 구문을 통해 "),a("code",[t._v("assert")]),t._v(" 모듈을 가져옵니다\n그리고 "),a("code",[t._v("console.log")]),t._v("를 "),a("code",[t._v("assert")]),t._v("로 변경합니다")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" assert "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://deno.land/std/testing/asserts.ts"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./accumulator.ts'")]),t._v("\n\nDeno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1과 2를 더하면 3 입니다'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1과 2를 더하면 3이어야합니다'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("이제 터미널에서 "),a("code",[t._v("deno test")]),t._v(" 를 입력합니다. "),a("code",[t._v("deno test")]),t._v(" 만 입력하면 해당 경로와 하위 경로에 있는 "),a("code",[t._v("{*_,*.,}test.{js,mjs,ts,jsx,tsx}")]),t._v(" 파일을 모두 실행합니다\n"),a("code",[t._v("deno test accumulator.test.ts")]),t._v(" 와 같이 원하는 파일만 실행하도록 할수도 있습니다")]),t._v(" "),a("p",[t._v("deno의 testing 라이브러리는 "),a("code",[t._v("assert")]),t._v(" 외에도 여러 다른 검증 도구를 제공합니다\n"),a("a",{attrs:{href:"https://deno.land/std@0.86.0/testing",target:"_blank",rel:"noopener noreferrer"}},[t._v("이 문서"),a("OutboundLink")],1),t._v("에서 검증을 위한 다른 메소드를 확인해보세요")])])}),[],!1,null,null,null);s.default=e.exports}}]);